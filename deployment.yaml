apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: gateway
  name: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gateway
    spec:
      containers:
      - image: gardenappl/gateway
        name: gateway
        resources: {}
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: cars
  name: cars
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cars
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: cars
    spec:
      containers:
      - image: gardenappl/cars
        name: cars
        resources: {}
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: payments
  name: payments
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payments
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: payments
    spec:
      containers:
      - image: gardenappl/payments
        name: payments
        resources: {}
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: requests
  name: requests
spec:
  replicas: 1
  selector:
    matchLabels:
      app: requests
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: requests
    spec:
      containers:
      - image: gardenappl/requests
        name: requests
        resources: {}
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: users
  name: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: users
    spec:
      containers:
      - image: gardenappl/users
        name: users
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: gateway
  name: gateway
spec:
  ports:
  - name: 8090-8090
    port: 8090
    protocol: TCP
    targetPort: 8090
  selector:
    app: gateway
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: cars
  name: cars
spec:
  ports:
  - name: 8091-8091
    port: 8091
    protocol: TCP
    targetPort: 8091
  selector:
    app: cars
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: payments
  name: payments
spec:
  ports:
  - name: 8092-8092
    port: 8092
    protocol: TCP
    targetPort: 8092
  selector:
    app: payments
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: users
  name: users
spec:
  ports:
  - name: 8094-8094
    port: 8094
    protocol: TCP
    targetPort: 8094
  selector:
    app: users
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: requests
  name: requests
spec:
  ports:
  - name: 8093-8093
    port: 8093
    protocol: TCP
    targetPort: 8093
  selector:
    app: requests
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: keycloak
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: default
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:15.0.2
        env:
        - name: KEYCLOAK_USER
          value: "admin"
        - name: KEYCLOAK_PASSWORD
          value: "admin"
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: DB_VENDOR
          value: "h2"
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: gp
  POSTGRES_USER: gp
  POSTGRES_PASSWORD: ''
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.1
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgres/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
   - port: 5432
  selector:
   app: postgres

